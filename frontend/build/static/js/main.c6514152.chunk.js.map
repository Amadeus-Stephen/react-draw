{"version":3,"sources":["index.js"],"names":["Canvas","props","match","state","color","painting","dimensions","canvasdata","ctx","lastPt","startdraw","bind","enddraw","draw","canvas","document","getElementById","this","getContext","height","width","addEventListener","axios","get","id","then","response","setState","data","image","Image","src","drawImage","catch","error","console","log","beginPath","e","lineWidth","lineCap","lineTo","offsetX","offsetY","strokeStyle","stroke","moveTo","className","React","Component","DimensionSelectorSlider","handleChange","event","onDimensionSelectorChange","target","value","type","min","max","onChange","ColorSelector","displayColorPicker","handleClick","handleClose","onColorSelectorChange","hex","onClick","style","background","SaveCanvas","onCanvasSave","xmlns","viewBox","d","AddCanvas","onAddCanvas","Index","toDataURL","fetch","params","method","headers","Accept","body","JSON","stringify","json","to","App","path","exact","component","HomePage","CanvasImage","_id","alt","canvases","newcanvas","map","i","key","displayCanvases","ReactDOM","render"],"mappings":"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","file":"static/js/main.c6514152.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { SketchPicker } from \"react-color\";\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport './index.css'\nimport axios from \"axios\";\n\nclass Canvas extends React.Component {\n  constructor(props, match) {\n    super(props,match);\n    this.state = { color: this.props.color, painting: false, dimensions:this.props.dimensions, canvasdata:''};\n    this.ctx = \"\";\n    this.lastPt=null;\n    this.startdraw = this.startdraw.bind(this);\n    this.enddraw = this.enddraw.bind(this);\n    this.draw = this.draw.bind(this);\n    \n    \n  }\n  componentDidMount() {\n    const canvas = document.getElementById(\"canvas\");\n    this.ctx = canvas.getContext(\"2d\");\n    canvas.height = 800;\n    canvas.width = 800;\n    canvas.addEventListener('mousedown', this.startdraw)\n    canvas.addEventListener('mouseup', this.enddraw)\n    canvas.addEventListener('mousemove', this.draw)\n    axios.get(`http://localhost:5000/canvases/${this.props.id}`)\n    .then(response => {\n      this.setState({canvasdata:response.data.canvas})\n      let image = new Image();\n      image.src=response.data.canvas\n      this.ctx.drawImage(image,0,0,canvas.width,canvas.height);\n    }).catch(function (error) {\n      console.log(error)\n    })\n  }\n  componentDidUpdate() {\n    let color =this.props.color\n    if (this.state.color !== color) {\n      this.setState({color:color})\n    }\n    let dimensions = this.props.dimensions \n    if (this.state.dimensions  !== dimensions){\n      this.setState({dimensions:dimensions})\n    }\n  }\n\n  startdraw() {\n    this.setState({ painting: true });\n\n  }\n  enddraw() {\n    this.setState({ painting: false });\n    this.ctx.beginPath();\n  }\n  draw(e) {\n    if (this.state.painting) {\n      this.ctx.lineWidth = this.state.dimensions;\n      this.ctx.lineCap = \"round\";\n      this.ctx.lineTo(e.offsetX, e.offsetY );\n      this.ctx.strokeStyle = this.state.color;\n      this.ctx.stroke();\n      this.ctx.beginPath();\n      this.ctx.moveTo(e.offsetX, e.offsetY );\n    } else {\n      return;\n    }\n  }\n  render() {\n    return (\n      <div className=\"box\">\n           <canvas\n        id=\"canvas\"\n        className=\"canvas\"\n      />\n      </div>\n    );\n  }\n}\nclass DimensionSelectorSlider extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(event) {\n    this.props.onDimensionSelectorChange(event.target.value);\n  }\n  render() {\n    const dimensions = this.props.dimensions\n    return (\n      <div className=\"d-flex flex-row\" >\n        <input type=\"range\" min=\"1\" max=\"100\" value={dimensions} id=\"myRange\" onChange={this.handleChange} />\n      </div>\n    )\n  }\n}\n\nclass ColorSelector extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      displayColorPicker: false,\n    };\n    this.handleChange = this.handleChange.bind(this)\n    this.handleClick = this.handleClick.bind(this)\n    this.handleClose = this.handleClose.bind(this)\n   \n    \n  }\n  handleClick() {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker });\n  };\n\n  handleClose() {\n    this.setState({ displayColorPicker: false });\n  };\n\n  handleChange(event) {\n    this.props.onColorSelectorChange(event.hex)\n  };\n  \n  render() {\n    const color = this.props.color\n    return (\n      <div>\n          <div className=\"changlecolorbtn\"onClick={this.handleClick}>\n          <div style={{background: color}} className=\"btncolor\"/>\n          </div>{this.state.displayColorPicker ? (<div className=\"colormenu\"><div className=\"menucovor\" onClick={this.handleClose} /><SketchPicker color={color} onChange={this.handleChange}/></div>) : null}\n      </div>\n    );\n  }\n}\nclass SaveCanvas extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleClick = this.handleClick.bind(this)\n  }\n  handleClick() {\n    this.props.onCanvasSave()\n  }\n  render() {\n    return <button type=\"button\" className=\"btn btn-secondary\" onClick={this.handleClick}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path d=\"M433.941 129.941l-83.882-83.882A48 48 0 0 0 316.118 32H48C21.49 32 0 53.49 0 80v352c0 26.51 21.49 48 48 48h352c26.51 0 48-21.49 48-48V163.882a48 48 0 0 0-14.059-33.941zM272 80v80H144V80h128zm122 352H54a6 6 0 0 1-6-6V86a6 6 0 0 1 6-6h42v104c0 13.255 10.745 24 24 24h176c13.255 0 24-10.745 24-24V83.882l78.243 78.243a6 6 0 0 1 1.757 4.243V426a6 6 0 0 1-6 6zM224 232c-48.523 0-88 39.477-88 88s39.477 88 88 88 88-39.477 88-88-39.477-88-88-88zm0 128c-22.056 0-40-17.944-40-40s17.944-40 40-40 40 17.944 40 40-17.944 40-40 40z\"/></svg></button>\n  }\n}\nclass AddCanvas extends React.Component {\n  constructor(props) {\n    super(props) \n    this.handleClick = this.handleClick.bind(this)\n  }\n  handleClick(){\n    this.props.onAddCanvas()\n  }\n  render() {\n    return <button type=\"button\" className=\"btn btn-secondary\" onClick={this.handleClick}><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 448 512\"><path d=\"M352 240v32c0 6.6-5.4 12-12 12h-88v88c0 6.6-5.4 12-12 12h-32c-6.6 0-12-5.4-12-12v-88h-88c-6.6 0-12-5.4-12-12v-32c0-6.6 5.4-12 12-12h88v-88c0-6.6 5.4-12 12-12h32c6.6 0 12 5.4 12 12v88h88c6.6 0 12 5.4 12 12zm96-160v352c0 26.5-21.5 48-48 48H48c-26.5 0-48-21.5-48-48V80c0-26.5 21.5-48 48-48h352c26.5 0 48 21.5 48 48zm-48 346V86c0-3.3-2.7-6-6-6H54c-3.3 0-6 2.7-6 6v340c0 3.3 2.7 6 6 6h340c3.3 0 6-2.7 6-6z\"/></svg></button>\n  }\n}\nclass Index extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { \n      dimensions: 10,\n      color: \"#000000\",\n    }\n    this.onDimensionSelectorChange = this.onDimensionSelectorChange.bind(this)\n    this.onColorSelectorChange = this.onColorSelectorChange.bind(this)\n    this.onCanvasSave = this.onCanvasSave.bind(this)\n  }\n  onColorSelectorChange(color) {\n    this.setState({color:color})\n  }\n  onDimensionSelectorChange(dimensions) {\n    this.setState({dimensions:dimensions})\n  }\n  onCanvasSave() {\n    const getcanvas = document.getElementById(\"canvas\");\n    const canvasdata = getcanvas.toDataURL();\n    const canvas = {\n      canvas:canvasdata\n    }\n    fetch(`http://localhost:5000/canvases/update/${this.props.match.params.id}`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(canvas),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Success:\", data);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  }\n  \n  render() {\n    return (\n      <div>\n        \n      <nav className=\"navbar navbar-dark bg-dark containinput\">\n      <ul className=\"navbar-nav\">\n        <li className=\"nav-item nav-link\"  >\n          <span className=\"btn badge\">\n          <SaveCanvas onCanvasSave={this.onCanvasSave}/>\n          </span>\n      </li>\n        <li className=\"nav-item nav-link\"  >\n          <span className=\"btn badge\">\n          <ColorSelector onColorSelectorChange={this.onColorSelectorChange} color={this.state.color}/>\n          </span>\n      </li>\n        <li className=\"nav-item \">\n            <span className=\" badge inputslider\">\n            <DimensionSelectorSlider onDimensionSelectorChange={this.onDimensionSelectorChange} dimensions={this.state.dimensions} />\n            </span>\n        </li>\n        <li className=\"nav-item nav-link\"  >\n            <span className=\"btn badge\">\n              <Link to={\"/\"}><button type=\"button\" className=\"btn btn-secondary\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\"><path d=\"M8 256c0 137 111 248 248 248s248-111 248-248S393 8 256 8 8 119 8 256zm448 0c0 110.5-89.5 200-200 200S56 366.5 56 256 145.5 56 256 56s200 89.5 200 200zm-72-20v40c0 6.6-5.4 12-12 12H256v67c0 10.7-12.9 16-20.5 8.5l-99-99c-4.7-4.7-4.7-12.3 0-17l99-99c7.6-7.6 20.5-2.2 20.5 8.5v67h116c6.6 0 12 5.4 12 12z\"/></svg></button></Link>\n              \n            </span>\n        </li>\n      </ul>\n      </nav>\n      <Canvas color={this.state.color} dimensions={this.state.dimensions} id={this.props.match.params.id}/>\n      </div>\n    );\n  }\n}\nclass App extends React.Component {\n  render() {\n    return <Router><Route path=\"/\" exact component={HomePage} /><Route path=\"/canvas/:id\" exact component={Index} /></Router> \n  }\n}\nclass CanvasImage extends React.Component {\n  render() {\n    return <Link to={`/canvas/${this.props.canvas._id}`} className=\"canvaslink\"><img src={`${this.props.canvas.canvas}`} className=\"col imageframe\" alt=\"PlaceholderImage\"/></Link> \n  }\n}\n\nclass HomePage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {canvases:[]}\n    this.newcanvas = {canvas: 1 }\n    this.onAddCanvas = this.onAddCanvas.bind(this)\n  }\n  componentDidMount() {\n    axios.get('http://localhost:5000/canvases/')\n    .then(response => {\n        this.setState({canvases:response.data})\n        console.log(\"got data\")\n    })\n    .catch((error) => {\n      console.log(error)\n    })\n  }\n  onAddCanvas() {\n    \n    console.log(this.newcanvas.canvas)\n    fetch(\"http://localhost:5000/canvases/create\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(this.newcanvas),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Success:\", data);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  \n    \n  }\n  displayCanvases() {\n    \n    return this.state.canvases.map(i => {\n     \n      return <CanvasImage key={i._id} canvas={i} />\n    })\n  }\n  render() {\n    return <div>\n      <nav className=\"navbar navbar-dark bg-dark containinput\">\n      <ul className=\"navbar-nav\">\n        <li className=\"nav-item nav-link\">\n        <span className=\"btn badge\">\n          <AddCanvas onAddCanvas={this.onAddCanvas}/>\n          </span>\n        </li>\n      </ul>\n      </nav>\n      <div className=\"row row-cols-2 box \">{this.displayCanvases()}</div>\n      </div>\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}