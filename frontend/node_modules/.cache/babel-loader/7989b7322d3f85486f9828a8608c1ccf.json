{"ast":null,"code":"var _jsxFileName = \"/home/vayne/Desktop/drawingthings/src/componets/canvus/canvus.jsx\";\nimport React from 'react';\n\nclass Canvas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: \"null\"\n    };\n    this.startdraw = this.startdraw.bind(this);\n    this.enddraw = this.enddraw.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateCanvas();\n  }\n\n  startdraw() {\n    this.painting = true;\n  }\n\n  enddraw() {\n    painting = false;\n    ctx.beginPath();\n  }\n\n  draw() {\n    if (painting) {\n      ctx.lineWidth = 10;\n      ctx.lineCap = \"round\";\n      ctx.lineTo(e.clientX, e.clientY);\n      ctx.stroke();\n      ctx.beginPath();\n      ctx.moveTo(e.clientX, e.clientY);\n    } else {\n      return;\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.color !== this.state.color) {\n      console.log('pokemons state has changed.');\n    }\n  }\n\n  updateCanvas() {\n    const canvus = document.getElementById('canvus');\n    const ctx = canvus.getContext('2d');\n    ctx.strokeStyle = this.props.color;\n    let painting = false;\n    canvus.height = window.innerHeight - window.innerHeight * 0.004;\n    canvus.width = window.innerWidth - window.innerWidth * 0.004;\n    canvus.addEventListener(\"mousedown\", startpostion);\n    canvus.addEventListener(\"mouseup\", endpostion);\n    canvus.addEventListener(\"mousemove\", draw(this.state.color));\n    window.addEventListener(\"resize\", () => {\n      canvus.height = window.innerHeight - window.innerHeight * 0.004;\n      canvus.width = window.innerWidth - window.innerWidth * 0.004;\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"canvas\", {\n      id: \"canvus\",\n      onMouseDown: this.startdraw,\n      onMouseUp: this.enddraw,\n      onMouseMove: this.draw,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default Canvas;","map":{"version":3,"sources":["/home/vayne/Desktop/drawingthings/src/componets/canvus/canvus.jsx"],"names":["React","Canvas","Component","constructor","props","state","color","startdraw","bind","enddraw","componentDidMount","updateCanvas","painting","ctx","beginPath","draw","lineWidth","lineCap","lineTo","e","clientX","clientY","stroke","moveTo","componentDidUpdate","prevProps","prevState","console","log","canvus","document","getElementById","getContext","strokeStyle","height","window","innerHeight","width","innerWidth","addEventListener","startpostion","endpostion","render"],"mappings":"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","sourcesContent":["\nimport React from 'react';\n\nclass Canvas extends React.Component {\n    constructor(props) {\n        super(props) \n        this.state = {color:\"null\"}\n        this.startdraw = this.startdraw.bind(this)\n        this.enddraw = this.enddraw.bind(this)\n    }\n    componentDidMount() {\n        this.updateCanvas();\n       \n    }\n    startdraw() {\n        this.painting = true;\n    }\n    enddraw() {\n        painting = false\n        ctx.beginPath();\n    }\n    draw() {\n        if (painting) {\n            ctx.lineWidth = 10;\n            ctx.lineCap = \"round\";\n            ctx.lineTo(e.clientX, e.clientY);\n            ctx.stroke();\n            ctx.beginPath();\n            ctx.moveTo(e.clientX, e.clientY);\n        }\n        else {\n            return;\n        }\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.color !== this.state.color) {\n          console.log('pokemons state has changed.')\n        }\n      }\n      \n    \n    updateCanvas() {\n        const canvus = document.getElementById('canvus')\n        const ctx = canvus.getContext('2d');\n        ctx.strokeStyle = this.props.color\n        let painting = false;\n        canvus.height = window.innerHeight - window.innerHeight * 0.004\n        canvus.width = window.innerWidth - window.innerWidth * 0.004\n\n     \n        canvus.addEventListener(\"mousedown\", startpostion);\n        canvus.addEventListener(\"mouseup\", endpostion);\n        canvus.addEventListener(\"mousemove\", draw(this.state.color));\n\n\n\n\n\n        window.addEventListener(\"resize\", () => {\n            canvus.height = window.innerHeight - window.innerHeight * 0.004\n            canvus.width = window.innerWidth - window.innerWidth * 0.004\n\n        });\n        \n    }\n    render() {\n        return (\n            <canvas id=\"canvus\" onMouseDown={this.startdraw} onMouseUp={this.enddraw} onMouseMove={this.draw}/>\n        );\n    }\n}\nexport default Canvas;\n"]},"metadata":{},"sourceType":"module"}