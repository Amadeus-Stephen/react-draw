{"ast":null,"code":"var _jsxFileName = \"/home/vayne/Desktop/drawingthings/src/componets/canvus/canvus.jsx\";\nimport React from 'react';\n\nclass Canvas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: \"null\",\n      painting: false\n    };\n    this.ctx = '';\n    this.startdraw = this.startdraw.bind(this);\n    this.enddraw = this.enddraw.bind(this);\n    this.draw = this.draw.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateCanvas();\n  }\n\n  startdraw() {\n    this.setState({\n      painting: true\n    });\n  }\n\n  enddraw() {\n    this.setState({\n      painting: false\n    });\n    this.ctx.beginPath();\n  }\n\n  draw(e) {\n    if (this.state.painting) {\n      this.ctx.lineTo(e.clientX, e.clientY);\n      this.ctx.stroke();\n      this.ctx.beginPath();\n      this.ctx.moveTo(e.clientX, e.clientY);\n    } else {\n      return;\n    }\n  }\n\n  updateCanvas() {\n    const canvus = document.getElementById('canvus');\n    const ctx = canvus.getContext('2d');\n    this.setState({\n      ctx: ctx\n    });\n    ctx.strokeStyle = this.props.color;\n    canvus.height = window.innerHeight - window.innerHeight * 0.004;\n    canvus.width = window.innerWidth - window.innerWidth * 0.004;\n    window.addEventListener(\"resize\", () => {\n      canvus.height = window.innerHeight - window.innerHeight * 0.004;\n      canvus.width = window.innerWidth - window.innerWidth * 0.004;\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"canvas\", {\n      id: \"canvus\",\n      onMouseDown: this.startdraw,\n      onMouseUp: this.enddraw,\n      onMouseMove: this.draw,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nexport default Canvas;","map":{"version":3,"sources":["/home/vayne/Desktop/drawingthings/src/componets/canvus/canvus.jsx"],"names":["React","Canvas","Component","constructor","props","state","color","painting","ctx","startdraw","bind","enddraw","draw","componentDidMount","updateCanvas","setState","beginPath","e","lineTo","clientX","clientY","stroke","moveTo","canvus","document","getElementById","getContext","strokeStyle","height","window","innerHeight","width","innerWidth","addEventListener","render"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,MAAN,SAAqBD,KAAK,CAACE,SAA3B,CAAqC;AACjCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAC,MAAP;AAAeC,MAAAA,QAAQ,EAAC;AAAxB,KAAb;AACA,SAAKC,GAAL,GAAW,EAAX;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaD,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKE,IAAL,GAAY,KAAKA,IAAL,CAAUF,IAAV,CAAe,IAAf,CAAZ;AAEH;;AACDG,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,YAAL;AAEH;;AACDL,EAAAA,SAAS,GAAG;AACR,SAAKM,QAAL,CAAc;AAACR,MAAAA,QAAQ,EAAC;AAAV,KAAd;AACH;;AACDI,EAAAA,OAAO,GAAG;AAEN,SAAKI,QAAL,CAAc;AAACR,MAAAA,QAAQ,EAAC;AAAV,KAAd;AACA,SAAKC,GAAL,CAASQ,SAAT;AACH;;AACDJ,EAAAA,IAAI,CAACK,CAAD,EAAI;AACJ,QAAI,KAAKZ,KAAL,CAAWE,QAAf,EAAyB;AACrB,WAAKC,GAAL,CAASU,MAAT,CAAgBD,CAAC,CAACE,OAAlB,EAA2BF,CAAC,CAACG,OAA7B;AACA,WAAKZ,GAAL,CAASa,MAAT;AACA,WAAKb,GAAL,CAASQ,SAAT;AACA,WAAKR,GAAL,CAASc,MAAT,CAAgBL,CAAC,CAACE,OAAlB,EAA2BF,CAAC,CAACG,OAA7B;AACH,KALD,MAMK;AACD;AACH;AACJ;;AAGDN,EAAAA,YAAY,GAAG;AAEX,UAAMS,MAAM,GAAGC,QAAQ,CAACC,cAAT,CAAwB,QAAxB,CAAf;AACA,UAAMjB,GAAG,GAAGe,MAAM,CAACG,UAAP,CAAkB,IAAlB,CAAZ;AACA,SAAKX,QAAL,CAAc;AAACP,MAAAA,GAAG,EAACA;AAAL,KAAd;AACAA,IAAAA,GAAG,CAACmB,WAAJ,GAAkB,KAAKvB,KAAL,CAAWE,KAA7B;AACAiB,IAAAA,MAAM,CAACK,MAAP,GAAgBC,MAAM,CAACC,WAAP,GAAqBD,MAAM,CAACC,WAAP,GAAqB,KAA1D;AACAP,IAAAA,MAAM,CAACQ,KAAP,GAAeF,MAAM,CAACG,UAAP,GAAoBH,MAAM,CAACG,UAAP,GAAoB,KAAvD;AACAH,IAAAA,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkC,MAAM;AACpCV,MAAAA,MAAM,CAACK,MAAP,GAAgBC,MAAM,CAACC,WAAP,GAAqBD,MAAM,CAACC,WAAP,GAAqB,KAA1D;AACAP,MAAAA,MAAM,CAACQ,KAAP,GAAeF,MAAM,CAACG,UAAP,GAAoBH,MAAM,CAACG,UAAP,GAAoB,KAAvD;AAEH,KAJD;AAMH;;AACDE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAQ,MAAA,EAAE,EAAC,QAAX;AAAoB,MAAA,WAAW,EAAE,KAAKzB,SAAtC;AAAiD,MAAA,SAAS,EAAE,KAAKE,OAAjE;AAA0E,MAAA,WAAW,EAAE,KAAKC,IAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AAtDgC;;AAwDrC,eAAeX,MAAf","sourcesContent":["\nimport React from 'react';\n\nclass Canvas extends React.Component {\n    constructor(props) {\n        super(props) \n        this.state = {color:\"null\", painting:false }\n        this.ctx = ''\n        this.startdraw = this.startdraw.bind(this)\n        this.enddraw = this.enddraw.bind(this)\n        this.draw = this.draw.bind(this)\n        \n    }\n    componentDidMount() {\n        this.updateCanvas();\n       \n    }\n    startdraw() {\n        this.setState({painting:true})\n    }\n    enddraw() {\n        \n        this.setState({painting:false})\n        this.ctx.beginPath();\n    }\n    draw(e) {\n        if (this.state.painting) {\n            this.ctx.lineTo(e.clientX, e.clientY);\n            this.ctx.stroke();\n            this.ctx.beginPath();\n            this.ctx.moveTo(e.clientX, e.clientY);\n        }\n        else {\n            return;\n        }\n    }\n\n    \n    updateCanvas() {\n\n        const canvus = document.getElementById('canvus')\n        const ctx = canvus.getContext('2d');\n        this.setState({ctx:ctx})\n        ctx.strokeStyle = this.props.color\n        canvus.height = window.innerHeight - window.innerHeight * 0.004\n        canvus.width = window.innerWidth - window.innerWidth * 0.004\n        window.addEventListener(\"resize\", () => {\n            canvus.height = window.innerHeight - window.innerHeight * 0.004\n            canvus.width = window.innerWidth - window.innerWidth * 0.004\n\n        });\n        \n    }\n    render() {\n        return (\n            <canvas id=\"canvus\" onMouseDown={this.startdraw} onMouseUp={this.enddraw} onMouseMove={this.draw}/>\n        );\n    }\n}\nexport default Canvas;\n"]},"metadata":{},"sourceType":"module"}