{"ast":null,"code":"var _jsxFileName = \"/home/vayne/Desktop/drawingthings/src/componets/canvus/canvus.jsx\";\nimport React from 'react';\nimport { render } from '@testing-library/react';\n\nclass Canvas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: this.props.color,\n      painting: false\n    };\n    this.ctx = '';\n    this.startdraw = this.startdraw.bind(this);\n    this.enddraw = this.enddraw.bind(this);\n    this.draw = this.draw.bind(this);\n  }\n\n  componentDidMount() {\n    const canvus = document.getElementById('canvus');\n    this.ctx = canvus.getContext('2d');\n    canvus.height = window.innerHeight - window.innerHeight * 0.004;\n    canvus.width = window.innerWidth - window.innerWidth * 0.004;\n    window.addEventListener(\"resize\", () => {\n      canvus.height = window.innerHeight - window.innerHeight * 0.004;\n      canvus.width = window.innerWidth - window.innerWidth * 0.004;\n    });\n  }\n\n  startdraw() {\n    this.setState({\n      painting: true\n    });\n    console.log(this.state.color);\n  }\n\n  enddraw() {\n    this.setState({\n      painting: false\n    });\n    this.ctx.beginPath();\n  }\n\n  draw(e) {\n    if (this.state.painting) {\n      this.ctx.lineWidth = 10;\n      this.ctx.lineCap = \"round\";\n      this.ctx.lineTo(e.clientX, e.clientY - 25);\n      this.ctx.strokeStyle = `${this.state.color}`;\n      this.ctx.stroke();\n      this.ctx.beginPath();\n      this.ctx.moveTo(e.clientX, e.clientY - 25);\n    } else {\n      return;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"canvas\", {\n      id: \"canvus\",\n      onMouseDown: this.startdraw,\n      onMouseUp: this.enddraw,\n      onMouseMove: this.draw,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    });\n  }\n\n}\n\nfunction UpdateCanvas(props) {\n  render();\n  return /*#__PURE__*/React.createElement(Canvas, {\n    color: props,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }\n  });\n}\n\nexport default UpdateCanvas;","map":{"version":3,"sources":["/home/vayne/Desktop/drawingthings/src/componets/canvus/canvus.jsx"],"names":["React","render","Canvas","Component","constructor","props","state","color","painting","ctx","startdraw","bind","enddraw","draw","componentDidMount","canvus","document","getElementById","getContext","height","window","innerHeight","width","innerWidth","addEventListener","setState","console","log","beginPath","e","lineWidth","lineCap","lineTo","clientX","clientY","strokeStyle","stroke","moveTo","UpdateCanvas"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport { render } from '@testing-library/react';\n\nclass Canvas extends React.Component {\n    constructor(props) {\n        super(props) \n        this.state = {color:this.props.color, painting:false }\n        this.ctx = ''\n        this.startdraw = this.startdraw.bind(this)\n        this.enddraw = this.enddraw.bind(this)\n        this.draw = this.draw.bind(this)\n        \n    }\n    componentDidMount() {\n        const canvus = document.getElementById('canvus')\n        this.ctx = canvus.getContext('2d');\n        canvus.height = window.innerHeight - window.innerHeight * 0.004\n        canvus.width = window.innerWidth - window.innerWidth * 0.004\n        window.addEventListener(\"resize\", () => {\n            canvus.height = window.innerHeight - window.innerHeight * 0.004\n            canvus.width = window.innerWidth - window.innerWidth * 0.004\n\n        });\n       \n    }\n    startdraw() {\n        this.setState({painting:true})\n        console.log(this.state.color)\n    }\n    enddraw() {\n        \n        this.setState({painting:false})\n        this.ctx.beginPath();\n    }\n    draw(e) {\n        if (this.state.painting) {\n            this.ctx.lineWidth = 10;\n            this.ctx.lineCap = \"round\";\n            this.ctx.lineTo(e.clientX, e.clientY - 25);\n            this.ctx.strokeStyle = `${this.state.color}`\n            this.ctx.stroke();\n            this.ctx.beginPath();\n            this.ctx.moveTo(e.clientX, e.clientY -25);\n        }\n        else {\n            return;\n        }\n    }\n\n    \n    render() {\n        return (\n            <canvas id=\"canvus\" onMouseDown={this.startdraw} onMouseUp={this.enddraw} onMouseMove={this.draw}/>\n        );\n    }\n}\nfunction UpdateCanvas(props) {\n    render() \n    return <Canvas color={props} />\n}\n\nexport default UpdateCanvas;"]},"metadata":{},"sourceType":"module"}