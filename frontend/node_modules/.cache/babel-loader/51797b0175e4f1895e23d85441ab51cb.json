{"ast":null,"code":"var _jsxFileName = \"/home/vayne/Desktop/drawingthings/src/index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { SketchPicker } from \"react-color\";\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './index.css';\nimport axios from \"axios\";\n\nclass Canvas extends React.Component {\n  constructor(props, match) {\n    super(props, match);\n    this.state = {\n      color: this.props.color,\n      painting: false,\n      dimensions: this.props.dimensions,\n      canvasdata: ''\n    };\n    this.ctx = \"\";\n    this.startdraw = this.startdraw.bind(this);\n    this.enddraw = this.enddraw.bind(this);\n    this.draw = this.draw.bind(this);\n  }\n\n  componentDidMount() {\n    const canvas = document.getElementById(\"canvas\");\n    this.ctx = canvas.getContext(\"2d\");\n    console.log(this.props.id);\n    axios.get(`http://192.168.1.251:5000/canvases/${this.props.id}`).then(response => {\n      this.setState({\n        canvasdata: response.data.canvas\n      });\n      let image = new Image();\n      image.src = response.data.canvas;\n      this.ctx.drawImage(image, 0, 0, canvas.width, canvas.height);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  componentDidUpdate() {\n    let color = this.props.color;\n\n    if (this.state.color !== color) {\n      this.setState({\n        color: color\n      });\n    }\n\n    let dimensions = this.props.dimensions;\n\n    if (this.state.dimensions !== dimensions) {\n      this.setState({\n        dimensions: dimensions\n      });\n    }\n  }\n\n  startdraw() {\n    this.setState({\n      painting: true\n    });\n    console.log(this.state.painting);\n  }\n\n  enddraw() {\n    this.setState({\n      painting: false\n    });\n    this.ctx.beginPath();\n  }\n\n  draw(e) {\n    if (this.state.painting) {\n      this.ctx.lineWidth = this.state.dimensions;\n      this.ctx.lineCap = \"round\";\n      this.ctx.lineTo(e.clientX, e.clientY);\n      this.ctx.strokeStyle = this.state.color;\n      this.ctx.stroke();\n      this.ctx.beginPath();\n      this.ctx.moveTo(e.clientX, e.clientY);\n    } else {\n      return;\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"canvas\", {\n      id: \"canvas\",\n      className: \"canvas\",\n      onMouseDown: this.startdraw,\n      onMouseUp: this.enddraw,\n      onMouseMove: this.draw //onTouchStart={this.startdraw}\n      //onTouchEnd={this.enddraw}\n      //onTouchMove={this.draw}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 12\n      }\n    }));\n  }\n\n}\n\nclass DimensionSelector extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event) {\n    this.props.onDimensionSelectorChange(event.target.value);\n  }\n\n  render() {\n    const dimensions = this.props.dimensions;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex flex-row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-secondary input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"range\",\n      min: \"1\",\n      max: \"100\",\n      value: dimensions,\n      id: \"myRange\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 55\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"badge badge-secondary input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: dimensions,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 55\n      }\n    })));\n  }\n\n}\n\nclass ColorSelector extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayColorPicker: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n  }\n\n  handleClick() {\n    this.setState({\n      displayColorPicker: !this.state.displayColorPicker\n    });\n  }\n\n  handleClose() {\n    this.setState({\n      displayColorPicker: false\n    });\n  }\n\n  handleChange(event) {\n    this.props.onColorSelectorChange(event.hex);\n  }\n\n  render() {\n    const color = this.props.color;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"changlecolorbtn\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        background: color\n      },\n      className: \"btncolor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }\n    })), this.state.displayColorPicker ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"colormenu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 51\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"menucovor\",\n      onClick: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 78\n      }\n    }), /*#__PURE__*/React.createElement(SketchPicker, {\n      color: color,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 134\n      }\n    })) : null);\n  }\n\n}\n\nclass SaveCanvas extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.props.onCanvasSave();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 12\n      }\n    }, \"Save\");\n  }\n\n}\n\nclass Index extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dimensions: 10,\n      color: \"#000000\"\n    };\n    this.onDimensionSelectorChange = this.onDimensionSelectorChange.bind(this);\n    this.onColorSelectorChange = this.onColorSelectorChange.bind(this);\n    this.onCanvasSave = this.onCanvasSave.bind(this);\n  }\n\n  onColorSelectorChange(color) {\n    this.setState({\n      color: color\n    });\n  }\n\n  onDimensionSelectorChange(dimensions) {\n    this.setState({\n      dimensions: dimensions\n    });\n  }\n\n  onCanvasSave() {\n    const getcanvas = document.getElementById(\"canvas\");\n    const canvasdata = getcanvas.toDataURL();\n    const canvas = {\n      canvas: canvasdata\n    };\n    fetch(`http://192.168.1.251:5000/canvases/update/${this.props.match.params.id}`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(canvas)\n    }).then(response => response.json()).then(data => {\n      console.log(\"Success:\", data);\n    }).catch(error => {\n      console.error(\"Error:\", error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"nav\", {\n      className: \"navbar navbar-dark bg-dark containinput\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ColorSelector, {\n      onColorSelectorChange: this.onColorSelectorChange,\n      color: this.state.color,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(DimensionSelector, {\n      onDimensionSelectorChange: this.onDimensionSelectorChange,\n      dimensions: this.state.dimensions,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(SaveCanvas, {\n      onCanvasSave: this.onCanvasSave,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Link, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 24\n      }\n    }, \"Exit\"))), /*#__PURE__*/React.createElement(Canvas, {\n      color: this.state.color,\n      dimensions: this.state.dimensions,\n      id: this.props.match.params.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nclass App extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      path: \"/\",\n      exact: true,\n      component: HomePage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 20\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: \"/canvas/:id\",\n      exact: true,\n      component: Index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 65\n      }\n    }));\n  }\n\n}\n\nclass CanvasImage extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(Link, {\n      to: `/canvas/${this.props.canvas._id}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: `${this.props.canvas.canvas}`,\n      className: \"col imageframe\",\n      alt: \"PlaceholderImage\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 58\n      }\n    }));\n  }\n\n}\n\nclass HomePage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      canvases: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://192.168.1.251:5000/canvases/').then(response => {\n      if (response.data.length === 0) {\n        const newCanvas = {\n          canvas: 1\n        };\n        axios.post('http://192.168.1.251:5000/canvases/create', newCanvas).then(res => console.log(res.data));\n      } else {\n        this.setState({\n          canvases: response.data\n        });\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  displayCanvases() {\n    return this.state.canvases.map(i => {\n      return /*#__PURE__*/React.createElement(CanvasImage, {\n        key: i._id,\n        canvas: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 14\n        }\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"nav\", {\n      className: \"navbar navbar bg-dark homenavbar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"navbar-brand mb-0 h1 text-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 5\n      }\n    }, \"When They Say They Don't Believe, I Hope That They See You In Me\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row row-cols-2 mainmenucontainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 9\n      }\n    }, this.displayCanvases()));\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 17\n  }\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/home/vayne/Desktop/drawingthings/src/index.js"],"names":["React","ReactDOM","SketchPicker","BrowserRouter","Router","Route","Link","axios","Canvas","Component","constructor","props","match","state","color","painting","dimensions","canvasdata","ctx","startdraw","bind","enddraw","draw","componentDidMount","canvas","document","getElementById","getContext","console","log","id","get","then","response","setState","data","image","Image","src","drawImage","width","height","catch","error","componentDidUpdate","beginPath","e","lineWidth","lineCap","lineTo","clientX","clientY","strokeStyle","stroke","moveTo","render","DimensionSelector","handleChange","event","onDimensionSelectorChange","target","value","ColorSelector","displayColorPicker","handleClick","handleClose","onColorSelectorChange","hex","background","SaveCanvas","onCanvasSave","Index","getcanvas","toDataURL","fetch","params","method","headers","Accept","body","JSON","stringify","json","App","HomePage","CanvasImage","_id","canvases","length","newCanvas","post","res","displayCanvases","map","i"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { SketchPicker } from \"react-color\";\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport './index.css'\nimport axios from \"axios\";\n\nclass Canvas extends React.Component {\n  constructor(props, match) {\n    super(props,match);\n    this.state = { color: this.props.color, painting: false, dimensions:this.props.dimensions, canvasdata:'' };\n    this.ctx = \"\";\n    this.startdraw = this.startdraw.bind(this);\n    this.enddraw = this.enddraw.bind(this);\n    this.draw = this.draw.bind(this);\n    \n  }\n  componentDidMount() {\n    const canvas = document.getElementById(\"canvas\");\n    this.ctx = canvas.getContext(\"2d\");\n    console.log(this.props.id)\n    axios.get(`http://192.168.1.251:5000/canvases/${this.props.id}`)\n    .then(response => {\n      this.setState({canvasdata:response.data.canvas})\n      let image = new Image();\n      image.src=response.data.canvas\n      this.ctx.drawImage(image,0,0,canvas.width,canvas.height);\n    }).catch(function (error) {\n      console.log(error)\n    })\n  }\n  componentDidUpdate() {\n    let color =this.props.color\n    if (this.state.color !== color) {\n      this.setState({color:color})\n    }\n    let dimensions = this.props.dimensions \n    if (this.state.dimensions  !== dimensions){\n      this.setState({dimensions:dimensions})\n    }\n  }\n  startdraw() {\n    this.setState({ painting: true });\n    console.log(this.state.painting)\n  }\n  enddraw() {\n    this.setState({ painting: false });\n    this.ctx.beginPath();\n  }\n  draw(e) {\n    if (this.state.painting) {\n      this.ctx.lineWidth = this.state.dimensions;\n      this.ctx.lineCap = \"round\";\n      this.ctx.lineTo(e.clientX, e.clientY );\n      this.ctx.strokeStyle = this.state.color;\n      this.ctx.stroke();\n      this.ctx.beginPath();\n      this.ctx.moveTo(e.clientX, e.clientY );\n    } else {\n      return;\n    }\n  }\n\n  render() {\n  \n    return (\n      <div className=\"container\">\n           <canvas\n        id=\"canvas\"\n        className=\"canvas\"\n        onMouseDown={this.startdraw}\n        onMouseUp={this.enddraw}\n        onMouseMove={this.draw}\n        //onTouchStart={this.startdraw}\n        //onTouchEnd={this.enddraw}\n        //onTouchMove={this.draw}\n      />\n      </div>\n   \n    );\n  }\n}\n\nclass DimensionSelector extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(event) {\n    this.props.onDimensionSelectorChange(event.target.value);\n  }\n  render() {\n    const dimensions = this.props.dimensions\n    return (\n      <div className=\"d-flex flex-row\" >\n        <span className=\"badge badge-secondary input\"><input type=\"range\" min=\"1\" max=\"100\" value={dimensions} id=\"myRange\" onChange={this.handleChange} /></span>\n        <span className=\"badge badge-secondary input\"><input type=\"text\" value={dimensions} onChange={this.handleChange} /></span>\n      </div>\n    )\n  }\n}\n\n\nclass ColorSelector extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      displayColorPicker: false,\n    };\n    this.handleChange = this.handleChange.bind(this)\n    this.handleClick = this.handleClick.bind(this)\n    this.handleClose = this.handleClose.bind(this)\n   \n    \n  }\n  handleClick() {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker });\n  };\n\n  handleClose() {\n    this.setState({ displayColorPicker: false });\n  };\n\n  handleChange(event) {\n    this.props.onColorSelectorChange(event.hex)\n  };\n  \n  render() {\n    const color = this.props.color\n    return (\n      <div>\n          <div className=\"changlecolorbtn\"onClick={this.handleClick}>\n          <div style={{background: color}} className=\"btncolor\"/>\n          </div>{this.state.displayColorPicker ? (<div className=\"colormenu\"><div className=\"menucovor\" onClick={this.handleClose} /><SketchPicker color={color} onChange={this.handleChange}/></div>) : null}\n      </div>\n    );\n  }\n}\nclass SaveCanvas extends React.Component {\n  constructor(props) {\n    super(props)\n    this.handleClick = this.handleClick.bind(this)\n  }\n  handleClick() {\n    this.props.onCanvasSave()\n  }\n  render() {\n    return <button type=\"button\" className=\"btn btn-secondary\" onClick={this.handleClick}>Save</button>\n  }\n}\nclass Index extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = { \n      dimensions: 10,\n      color: \"#000000\",\n    }\n    this.onDimensionSelectorChange = this.onDimensionSelectorChange.bind(this)\n    this.onColorSelectorChange = this.onColorSelectorChange.bind(this)\n    this.onCanvasSave = this.onCanvasSave.bind(this)\n  }\n  onColorSelectorChange(color) {\n    this.setState({color:color})\n  }\n  onDimensionSelectorChange(dimensions) {\n    this.setState({dimensions:dimensions})\n  }\n  onCanvasSave() {\n    const getcanvas = document.getElementById(\"canvas\");\n    const canvasdata = getcanvas.toDataURL();\n    const canvas = {\n      canvas:canvasdata\n    }\n    fetch(`http://192.168.1.251:5000/canvases/update/${this.props.match.params.id}`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(canvas),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(\"Success:\", data);\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n  }\n  \n  render() {\n    return (\n      <div>\n        \n      <nav className=\"navbar navbar-dark bg-dark containinput\">\n        <ColorSelector onColorSelectorChange={this.onColorSelectorChange} color={this.state.color}/>\n        <DimensionSelector onDimensionSelectorChange={this.onDimensionSelectorChange} dimensions={this.state.dimensions}/>\n        <SaveCanvas onCanvasSave={this.onCanvasSave}/>\n        <Link to={\"/\"}><button type=\"button\" className=\"btn btn-secondary\">Exit</button></Link>\n      </nav>\n      <Canvas color={this.state.color} dimensions={this.state.dimensions} id={this.props.match.params.id}/>\n      </div>\n    );\n  }\n}\nclass App extends React.Component {\n  render() {\n    return <Router><Route path=\"/\" exact component={HomePage} /><Route path=\"/canvas/:id\" exact component={Index} /></Router> \n  }\n}\nclass CanvasImage extends React.Component {\n  render() {\n    return <Link to={`/canvas/${this.props.canvas._id}`}><img src={`${this.props.canvas.canvas}`} className=\"col imageframe\" alt=\"PlaceholderImage\"/></Link> \n  }\n}\n\nclass HomePage extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {canvases:[]}\n  }\n  componentDidMount() {\n    axios.get('http://192.168.1.251:5000/canvases/')\n    .then(response => {\n      if (response.data.length === 0) {\n          const newCanvas = { canvas: 1}\n          axios.post('http://192.168.1.251:5000/canvases/create', newCanvas)\n          .then(res => console.log(res.data))\n      }else {\n        this.setState({canvases:response.data})\n\n      }\n    })\n    .catch((error) => {\n      console.log(error)\n    })\n  }\n  displayCanvases() {\n    \n    return this.state.canvases.map(i => {\n     \n      return <CanvasImage key={i._id} canvas={i} />\n    })\n  }\n  render() {\n    return <div><nav className=\"navbar navbar bg-dark homenavbar\">\n    <span className=\"navbar-brand mb-0 h1 text-info\">When They Say They Don't Believe,\nI Hope That They See You In Me</span>\n  </nav><div className=\"row row-cols-2 mainmenucontainer\">{this.displayCanvases()}</div></div>\n  }\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}